{"version":3,"file":"static/js/530.354304f1.chunk.js","mappings":"wRAQA,MAAMA,GAAQC,EAAAA,EAAAA,GCPd,CAAgB,MAAQ,qBAAqB,eAAiB,8BAA8B,KAAO,oBAAoB,aAAe,8BDiChIC,GAAiBC,EAAAA,EAAAA,GAAU,CAC7BC,KAAM,SADaD,EAvBLE,IAAuC,IAAtC,aAAEC,EAAY,QAAEC,EAAO,MAAEC,GAAOH,EAC/C,OACII,EAAAA,EAAAA,MAAA,QAAMC,UAAWV,EAAM,QAASW,SAAUL,EAAaM,SAAA,EACnDC,EAAAA,EAAAA,KAAA,OAAAD,UAAKC,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACC,YAAa,QAASC,KAAM,QAASC,UAAWC,EAAAA,EAAOC,KAAM,QAASC,SAAU,CAACC,EAAAA,QAC7FR,EAAAA,EAAAA,KAAA,OAAAD,UAAKC,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACC,YAAa,WAAYC,KAAM,WAAYC,UAAWC,EAAAA,EAAOC,KAAM,WAAYC,SAAU,CAACC,EAAAA,QACtGR,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACQ,GAAI,aAAcN,KAAM,WAAYC,UAAWC,EAAAA,EAAOC,KAAM,aAAcI,SAAU,kBAE9FhB,IACGE,EAAAA,EAAAA,MAAA,OAAKC,UAAWV,EAAM,gBAAgBY,SAAA,EAClCC,EAAAA,EAAAA,KAAA,OAAKW,IAAKjB,EAASkB,IAAI,MACvBZ,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACE,KAAM,OAAQC,UAAWC,EAAAA,EAAOC,KAAM,UAAWJ,YAAa,2BAA4BK,SAAU,CAACC,EAAAA,QAEnHb,IACGK,EAAAA,EAAAA,KAAA,OAAKH,UAAWV,EAAM,cAAgB,IAAM0B,EAAAA,EAAiB,uBAAuBd,SAC/EJ,KAGTC,EAAAA,EAAAA,MAAA,OAAAG,SAAA,CAAK,KAACC,EAAAA,EAAAA,KAAA,UAAQH,UAAU,aAAYE,SAAC,eAClC,IA0Bf,EAlBce,IAA+C,IAA9C,WAAEC,EAAU,SAAEjB,EAAQ,QAAEJ,EAAO,MAAEsB,GAAOF,EAEnD,OAAIC,GAEIf,EAAAA,EAAAA,KAACiB,EAAAA,GAAQ,CAACC,GAAI,cAKlBlB,EAAAA,EAAAA,KAAA,QAAMH,UAAWV,EAAM,CAAC,UAAUY,UAC9BH,EAAAA,EAAAA,MAAA,OAAKC,UAAWV,EAAM,CAAC,iBAAkB,aAAaY,SAAA,EAClDC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,WACJC,EAAAA,EAAAA,KAACX,EAAc,CAACS,SAAUA,EAAUJ,QAASA,EAASsB,MAAOA,QAE9D,EE9Cf,MAAMG,UAAuBC,EAAAA,UAAUC,WAAAA,GAAA,SAAAC,WAAA,KACnCxB,SAAYyB,IACRC,KAAKC,MAAMC,MAAMH,EAASI,MAAOJ,EAASK,WAAYL,EAASM,WAAYN,EAAS7B,QAAQ,CAC/F,CAEDoC,MAAAA,GACI,OAAO9B,EAAAA,EAAAA,KAAC+B,EAAK,IAAKP,KAAKC,MAAO3B,SAAU0B,KAAK1B,UACjD,EAGJ,MAQA,GAAekC,EAAAA,EAAAA,KACXC,EAAAA,EAAAA,KATqBjB,IACd,CACHA,MAAOA,EACPD,WAAYC,EAAMkB,KAAKnB,WACvBrB,QAASsB,EAAMkB,KAAKxC,WAKC,CACrBgC,MACJ,OAHJ,CAIEP,E,oFCxBF,MAAMgB,GAAQ/C,EAAAA,EAAAA,GAAkBgD,EAAAA,GAE1BC,EAAoBjB,GAAc5B,IAA0C,IAAzC,MAAE8C,EAAK,KAAEC,EAAI,SAAEC,KAAaf,GAAOjC,EACxE,OACII,EAAAA,EAAAA,MAAA,OAAKC,UAAWsC,EAAM,CAAC,eAAgBK,EAAW,QAAU,KAAKzC,SAAA,EAC7DC,EAAAA,EAAAA,KAACoB,EAAS,IACFkB,KACAb,IAEPA,EAAMf,WAAYV,EAAAA,EAAAA,KAAA,SAAOyC,QAAShB,EAAMhB,GAAGV,SAAE0B,EAAMf,WACnD8B,IAAYxC,EAAAA,EAAAA,KAAA,QAAMH,UAAWsC,EAAM,iBAAiBpC,SAAM,OAAJwC,QAAI,IAAJA,OAAI,EAAJA,EAAM5C,UAC3D,EAIR+C,EAAgBL,EAAiBM,EAAAA,GAE1BC,EAAW9B,IAAkC,IAAjC,QAAE+B,EAAO,KAAEN,KAASd,GAAOX,EAChD,OAAOd,EAAAA,EAAAA,KAAC0C,EAAa,IAAKjB,EACtB5B,UAAWsC,EAAM,aACjBU,QAASA,EACTN,KAAMA,EACNC,SAAUD,EAAKO,cAAgB,EAGjCC,EAAaV,EAAiB,SAEvBhC,EAAQ2C,IAAyB,IAAxB,KAAET,KAASd,GAAOuB,EACpC,OAAOhD,EAAAA,EAAAA,KAAC+C,EAAU,IAAKtB,EAAOc,KAAMA,EAChCC,SAAUD,EAAKU,SAAWV,EAAK5C,OAAS,C,kCCjCzC,MAAMa,EAAgB0C,IACzB,IAAIA,EAGJ,MAAO,mBAAmB,C,kCCH9B,SAAgB,eAAe,oCAAoC,MAAQ,6BAA6B,gBAAgB,qCAAqC,YAAY,iCAAiC,sBAAsB,2C","sources":["components/Login/Login.jsx","webpack://social-network-react/./src/components/Login/Login.module.css?3530","components/Login/LoginContainer.jsx","components/common/FormsControls/FormsControls.jsx","utils/formValidators/validators.js","webpack://social-network-react/./src/components/common/FormsControls/FormsControls.module.css?eb50"],"sourcesContent":["import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { classNameFunction } from '../../utils/classNameCompiler';\r\nimport { requiredField } from '../../utils/formValidators/validators';\r\nimport { Input } from '../common/FormsControls/FormsControls';\r\nimport formControlStyle from '../common/FormsControls/FormsControls.module.css';\r\nimport s from './Login.module.css';\r\nconst cName = classNameFunction(s);\r\n\r\n\r\nconst LoginForm = ({ handleSubmit, captcha, error }) => {\r\n    return (\r\n        <form className={cName('form')} onSubmit={handleSubmit} >\r\n            <div><Field placeholder={\"Email\"} type={\"email\"} component={Input} name={\"email\"} validate={[requiredField]} /></div>\r\n            <div><Field placeholder={\"Password\"} type={\"password\"} component={Input} name={\"password\"} validate={[requiredField]} /></div>\r\n            <div>\r\n                <Field id={'rememberMe'} type={\"checkbox\"} component={Input} name={\"rememberMe\"} labelext={\"Remember me\"} />\r\n            </div>\r\n            {captcha &&\r\n                <div className={cName('captchaBlock')}>\r\n                    <img src={captcha} alt=\"\" />\r\n                    <Field type={\"text\"} component={Input} name={\"captcha\"} placeholder={\"Please enter the captcha\"} validate={[requiredField]} />\r\n                </div>}\r\n            {error &&\r\n                <div className={cName('error-main') + ' ' + formControlStyle['sum-error-container']}>\r\n                    {error}\r\n                </div>\r\n            }\r\n            <div> <button className='mainButton'>Login</button></div>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login',\r\n})(LoginForm);\r\n\r\nconst Login = ({ isLoggedIn, onSubmit, captcha, state }) => {\r\n\r\n    if (isLoggedIn) {\r\n        return (\r\n            <Navigate to={'/profile'} />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <main className={cName(['login'])}>\r\n            <div className={cName(['loginContainer', 'stdBlock'])}>\r\n                <h1>Login</h1>\r\n                <LoginReduxForm onSubmit={onSubmit} captcha={captcha} state={state} />\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"login\":\"Login_login__NnTBG\",\"loginContainer\":\"Login_loginContainer__iheEY\",\"form\":\"Login_form__+gqqr\",\"captchaBlock\":\"Login_captchaBlock__XkjQQ\"};","import { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { login } from './../../redux/authReducer';\r\nimport Login from './Login';\r\n\r\nclass LoginContainer extends Component {\r\n    onSubmit = (formData) => {\r\n        this.props.login(formData.email, formData.password, !!formData.rememberMe, formData.captcha);\r\n    }\r\n\r\n    render() {\r\n        return <Login {...this.props} onSubmit={this.onSubmit} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        state: state,\r\n        isLoggedIn: state.auth.isLoggedIn,\r\n        captcha: state.auth.captcha,\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        login\r\n    })\r\n)(LoginContainer)","import TextareaAutosize from 'react-textarea-autosize';\r\nimport { classNameFunction } from '../../../utils/classNameCompiler';\r\nimport s from './FormsControls.module.css';\r\n\r\nconst cname = classNameFunction(s);\r\n\r\nconst withFormControls = (Component) => ({ input, meta, hasError, ...props }) => {\r\n    return (\r\n        <div className={cname(['form-control', hasError ? 'error' : ''])}>\r\n            <Component\r\n                {...input}\r\n                {...props}\r\n            />\r\n            {props.labelext && <label htmlFor={props.id}>{props.labelext}</label>}\r\n            {hasError && <span className={cname('error-message')}>{meta?.error}</span>}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst InnerTextArea = withFormControls(TextareaAutosize);\r\n\r\nexport const TextArea = ({ maxRows, meta, ...props }) => {\r\n    return <InnerTextArea {...props}\r\n        className={cname('text-area')}\r\n        maxRows={maxRows}\r\n        meta={meta}\r\n        hasError={meta.submitFailed} />\r\n};\r\n\r\nconst InnerInput = withFormControls(\"input\");\r\n\r\nexport const Input = ({ meta, ...props }) => {\r\n    return <InnerInput {...props} meta={meta}\r\n        hasError={meta.touched && meta.error} />\r\n};","export const requiredField = value => {\r\n    if (value) {\r\n        return undefined;\r\n    }\r\n    return 'Field is required';\r\n};\r\n\r\nexport const maxLengthCreate = max => value => {\r\n    if (value.length > max) {\r\n        return `Max length is ${max} symbols`;\r\n    }\r\n    return undefined;\r\n};","// extracted by mini-css-extract-plugin\nexport default {\"form-control\":\"FormsControls_form-control__Xs-2k\",\"error\":\"FormsControls_error__XpDEH\",\"error-message\":\"FormsControls_error-message__ervNF\",\"text-area\":\"FormsControls_text-area__1PpLI\",\"sum-error-container\":\"FormsControls_sum-error-container__O0jAX\"};"],"names":["cName","classNameFunction","LoginReduxForm","reduxForm","form","_ref","handleSubmit","captcha","error","_jsxs","className","onSubmit","children","_jsx","Field","placeholder","type","component","Input","name","validate","requiredField","id","labelext","src","alt","formControlStyle","_ref2","isLoggedIn","state","Navigate","to","LoginContainer","Component","constructor","arguments","formData","this","props","login","email","password","rememberMe","render","Login","compose","connect","auth","cname","s","withFormControls","input","meta","hasError","htmlFor","InnerTextArea","TextareaAutosize","TextArea","maxRows","submitFailed","InnerInput","_ref3","touched","value"],"sourceRoot":""}