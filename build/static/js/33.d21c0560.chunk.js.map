{"version":3,"file":"static/js/33.d21c0560.chunk.js","mappings":"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","sources":["webpack://social-network-react/./src/components/Dialogs/DialogItem/DialogItem.module.css?beb9","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/DialogItem/DialogItemContainer.jsx","webpack://social-network-react/./src/components/Dialogs/Dialogs.module.css?1b2e","img/uiActions/send.svg","webpack://social-network-react/./src/components/Dialogs/MessagesPanel/AddMessageForm/AddMessageForm.module.css?a1c5","components/Dialogs/MessagesPanel/AddMessageForm/AddMessageForm.jsx","components/Dialogs/MessagesPanel/AddMessageForm/AddMessageFormContainer.jsx","webpack://social-network-react/./src/components/Dialogs/MessagesPanel/Message/Message.module.css?f9b3","components/Dialogs/MessagesPanel/Message/Message.jsx","components/Dialogs/MessagesPanel/Message/MessageContainer.jsx","webpack://social-network-react/./src/components/Dialogs/MessagesPanel/MessagesPanel.module.css?9629","components/Dialogs/MessagesPanel/MessagesPanel.jsx","components/Dialogs/MessagesPanel/MessagesPanelContainer.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/common/FormsControls/FormsControls.jsx","components/hoc/withLoginRedirect.jsx","utils/formValidators/validators.js","webpack://social-network-react/./src/components/common/FormsControls/FormsControls.module.css?eb50"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"DialogItem_dialog__-LAje\",\"active\":\"DialogItem_active__rLZXK\",\"dialogText\":\"DialogItem_dialogText__6FsXj\",\"imgContainer\":\"DialogItem_imgContainer__dknC7\",\"userImg\":\"DialogItem_userImg__jfMmZ\",\"preview\":\"DialogItem_preview__FxNLH\",\"userName\":\"DialogItem_userName__lsUAQ\"};","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { classNameFunction } from \"../../../utils/classNameCompiler\";\r\nimport s from \"./DialogItem.module.css\";\r\n\r\nconst cName = classNameFunction(s);\r\n\r\nconst DialogItem = ({ id, userImg, userName, messagePreview }) => {\r\n    const path = `/dialogs/${id}`;\r\n\r\n    return (\r\n        <NavLink to={path}\r\n            className={(nd) => cName(['dialog'], nd)}>\r\n            <div className={s.imgContainer}>\r\n                <img className={s.userImg} src={userImg} alt=\"user\" />\r\n            </div>\r\n            <div className={s.dialogText}>\r\n                <div className={s.preview}>\r\n                    <span className={s.userName}>{userName}</span>\r\n                </div>\r\n                <div className={s.preview}>\r\n                    <span className={s.lastMessage}>{messagePreview}</span>\r\n                </div>\r\n            </div>\r\n        </NavLink>\r\n    );\r\n}\r\n\r\nexport default DialogItem;\r\n\r\n","import { connect } from 'react-redux';\r\nimport DialogItem from './DialogItem';\r\n\r\nconst mapStateToProps = (state, props) => {\r\n    return {\r\n        id: props.dialogItemInfo.id,\r\n        userName: props.dialogItemInfo.userName,\r\n        userImg: props.dialogItemInfo.userImg,\r\n        messagePreview: props.dialogItemInfo.messages[0].text,\r\n    };\r\n}\r\n\r\nconst DialogItemContainer = connect(mapStateToProps)(DialogItem);\r\n\r\nexport default DialogItemContainer;\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__ehYCe\",\"dialogContainer\":\"Dialogs_dialogContainer__Gm4+k\",\"dialogHeader\":\"Dialogs_dialogHeader__m79TA\",\"dialogHeaderText\":\"Dialogs_dialogHeaderText__Wjb7W\",\"dialogItems\":\"Dialogs_dialogItems__DX2f-\"};","var _defs, _g;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgSend(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"64pt\",\n    height: \"64pt\",\n    viewBox: \"0 0 64 64\",\n    style: {\n      isolation: \"isolate\"\n    },\n    id: \"send\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"a\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 64,\n    height: 64\n  })))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#a)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \" M 8.216 36.338 L 26.885 32.604 C 28.552 32.271 28.552 31.729 26.885 31.396 L 8.216 27.662 C 7.104 27.44 6.021 26.356 5.799 25.245 L 2.065 6.576 C 1.731 4.908 2.714 4.133 4.259 4.846 L 61.228 31.139 C 62.257 31.614 62.257 32.386 61.228 32.861 L 4.259 59.154 C 2.714 59.867 1.731 59.092 2.065 57.424 L 5.799 38.755 C 6.021 37.644 7.104 36.56 8.216 36.338 Z \"\n  }))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgSend);\nexport default __webpack_public_path__ + \"static/media/send.135df727ecba31ee5980e5033ee2bf99.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"writingPanel\":\"AddMessageForm_writingPanel__DfGNr\",\"inputWrapper\":\"AddMessageForm_inputWrapper__bPJhv\",\"sendButtonContainer\":\"AddMessageForm_sendButtonContainer__IYkaU\"};","import { Field } from 'redux-form';\r\nimport sendIcon from '../../../../img/uiActions/send.svg';\r\nimport { requiredField } from '../../../../utils/formValidators/validators';\r\nimport { TextArea } from '../../../common/FormsControls/FormsControls';\r\nimport s from './AddMessageForm.module.css';\r\n\r\nconst AddMessageForm = ({ onKeyUp, handleSubmit }) => {\r\n    return (\r\n        <form onKeyUp={(e) => { onKeyUp(e, handleSubmit) }} onSubmit={handleSubmit}>\r\n            <div className={s.writingPanel}>\r\n                <div className={s.inputWrapper}>\r\n                    <Field name=\"newMessageBody\" component={TextArea} maxRows={12} placeholder=\"Write your message...\" validate={[requiredField]} />\r\n                </div>\r\n                <button className={s.sendButtonContainer}>\r\n                    <img src={sendIcon} alt=\"\" />\r\n                </button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default AddMessageForm;\r\n\r\n","import React, { Component } from 'react';\r\nimport { compose } from 'redux';\r\nimport { reduxForm } from 'redux-form';\r\nimport AddMessageForm from './AddMessageForm';\r\n\r\nclass AddMessageFormContainer extends Component {\r\n    onKeyUp = (e, handleSubmit) => {\r\n        if (e.key === 'Enter' && !e.shiftKey) {\r\n            handleSubmit(e);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <AddMessageForm {...this.props} onKeyUp={this.onKeyUp} />\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    reduxForm({\r\n        form: 'messages'\r\n    })\r\n)(AddMessageFormContainer);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__9dHgH\",\"messageImgContainer\":\"Message_messageImgContainer__mmlOu\",\"textContainer\":\"Message_textContainer__PuHc8\",\"textBlock\":\"Message_textBlock__bdYE9\",\"userName\":\"Message_userName__r9oqn\"};","import React from \"react\";\r\nimport s from \"./Message.module.css\";\r\n\r\nconst Message = ({ userImg, userName, text }) => {\r\n    return (\r\n        <div className={s.message}>\r\n            <div className={s.messageImgContainer}>\r\n                <img\r\n                    src={userImg}\r\n                    alt=\"user\" />\r\n            </div>\r\n            <div className={s.textContainer}>\r\n                <div className={s.textHeader}>\r\n                    <span className={s.userName}>{userName}</span>\r\n                </div>\r\n                <div className={s.textBlock}>\r\n                    <p>\r\n                        {text}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;\r\n\r\n","import { connect } from 'react-redux';\r\nimport Message from './Message';\r\n\r\nconst MessageContainer = connect(null)(Message);\r\n\r\nexport default MessageContainer;\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"messageContainer\":\"MessagesPanel_messageContainer__i9dAQ\",\"messageHeader\":\"MessagesPanel_messageHeader__Ur5ZZ\",\"messageHeaderText\":\"MessagesPanel_messageHeaderText__qkkt2\",\"userImg\":\"MessagesPanel_userImg__JX9pb\",\"messageItems\":\"MessagesPanel_messageItems__TmaQ3\",\"messagesEnd\":\"MessagesPanel_messagesEnd__hS6tc\"};","import React from \"react\";\r\nimport AddMessageFormContainer from \"./AddMessageForm/AddMessageFormContainer\";\r\nimport MessageContainer from \"./Message/MessageContainer\";\r\nimport s from \"./MessagesPanel.module.css\";\r\n\r\n\r\n\r\nconst MessagesPanel = ({ messages, myName, myImage, userName, userImg, id, onSubmit }) => {\r\n    const messagesEnd = React.createRef();\r\n\r\n    const scrollToBottom = () => {\r\n        messagesEnd.current.scrollIntoView({ block: \"end\" });\r\n    }\r\n\r\n    const messageItems = messages.map((m) => {\r\n        const realName = m.your ? myName : userName;\r\n        const realImg = m.your ? myImage : userImg;\r\n\r\n        return <MessageContainer key={m.id} {...m} userName={realName} userImg={realImg}\r\n            messages={messages} />\r\n    });\r\n\r\n    //FIXME: fix onload later\r\n    return (\r\n        <div onLoad={scrollToBottom} className={s.messageContainer}>\r\n            <header className={s.messageHeader}>\r\n                <span className={s.messageHeaderText}>{userName}</span>\r\n                <img className={s.userImg} src={userImg} alt=\"user\" />\r\n            </header>\r\n            <div className={s.messageItems}>\r\n                {messageItems}\r\n                <div ref={messagesEnd} className={s.messagesEnd}></div>\r\n            </div>\r\n            <AddMessageFormContainer key={id} onSubmit={onSubmit} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MessagesPanel;\r\n\r\n","import { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { sendMessage } from \"../../../redux/dialogsReducer\";\r\nimport MessagesPanel from \"./MessagesPanel\";\r\n\r\nclass MessagesPanelContainer extends Component {\r\n\r\n    onSubmit = (formData) => {\r\n        this.props.sendMessage(this.props.id, formData.newMessageBody);\r\n    }\r\n\r\n    render() {\r\n        return <MessagesPanel {...this.props} onSubmit={this.onSubmit} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n    return {\r\n        ...props.dialogItemInfo,\r\n        myImage: state.auth.image,\r\n        myName: state.auth.login,\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        sendMessage\r\n    })\r\n)(MessagesPanelContainer);\r\n\r\n\r\n","import React from 'react';\r\nimport { Route, Routes } from \"react-router-dom\";\r\nimport DialogItemContainer from \"./DialogItem/DialogItemContainer\";\r\nimport s from './Dialogs.module.css';\r\nimport MessagesPanelContainer from \"./MessagesPanel/MessagesPanelContainer\";\r\n\r\n\r\nconst Dialogs = ({ dialogs }) => {\r\n    const dialogItems = [];\r\n    const messageContainers = [];\r\n    dialogs?.forEach((el) => {\r\n        dialogItems.push(\r\n            <DialogItemContainer key={el.id} dialogItemInfo={el} />\r\n        );\r\n        messageContainers.push(\r\n            <Route key={el.id} path={'/' + el.id} element={\r\n                <MessagesPanelContainer id={el.id} dialogItemInfo={el} />\r\n            } />\r\n        );\r\n    });\r\n\r\n    return (\r\n        <main className={s.dialogs}>\r\n            <div className={s.dialogContainer}>\r\n                <header className={s.dialogHeader}>\r\n                    <span className={s.dialogHeaderText}>All Dialogs</span>\r\n                </header>\r\n                <div className={s.dialogItems}>\r\n                    {dialogItems}\r\n                </div>\r\n            </div>\r\n            <Routes>\r\n                {messageContainers}\r\n            </Routes>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default Dialogs;","import { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport withLoginRedirect from '../hoc/withLoginRedirect';\r\nimport Dialogs from './Dialogs';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogs.dialogs,\r\n    };\r\n}\r\n\r\nexport default compose(\r\n    withLoginRedirect,\r\n    connect(mapStateToProps)\r\n)(Dialogs);","import TextareaAutosize from 'react-textarea-autosize';\r\nimport { classNameFunction } from '../../../utils/classNameCompiler';\r\nimport s from './FormsControls.module.css';\r\n\r\nconst cname = classNameFunction(s);\r\n\r\nconst withFormControls = (Component) => ({ input, meta, hasError, ...props }) => {\r\n    return (\r\n        <div className={cname(['form-control', hasError ? 'error' : ''])}>\r\n            <Component\r\n                {...input}\r\n                {...props}\r\n            />\r\n            {props.labelext && <label htmlFor={props.id}>{props.labelext}</label>}\r\n            {hasError && <span className={cname('error-message')}>{meta?.error}</span>}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst InnerTextArea = withFormControls(TextareaAutosize);\r\n\r\nexport const TextArea = ({ maxRows, meta, ...props }) => {\r\n    return <InnerTextArea {...props}\r\n        className={cname('text-area')}\r\n        maxRows={maxRows}\r\n        meta={meta}\r\n        hasError={meta.submitFailed} />\r\n};\r\n\r\nconst InnerInput = withFormControls(\"input\");\r\n\r\nexport const Input = ({ meta, ...props }) => {\r\n    return <InnerInput {...props} meta={meta}\r\n        hasError={meta.touched && meta.error} />\r\n};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nconst withLoginRedirect = (Component) => {\r\n    const LoginRedirect = (props) => {\r\n\r\n        if (!props.isLoggedIn && !props.userId) {\r\n            return <Navigate to='/login' />;\r\n        }\r\n\r\n        return <Component {...props} />\r\n    };\r\n\r\n    const mapStateToProps = (state, props) => {\r\n        return {\r\n            isLoggedIn: state.auth.isLoggedIn,\r\n            userId: props.router?.params.userId,\r\n        };\r\n    };\r\n\r\n    return connect(mapStateToProps)(LoginRedirect);\r\n};\r\n\r\nexport default withLoginRedirect;\r\n","export const requiredField = value => {\r\n    if (value) {\r\n        return undefined;\r\n    }\r\n    return 'Field is required';\r\n};\r\n\r\nexport const maxLengthCreate = max => value => {\r\n    if (value.length > max) {\r\n        return `Max length is ${max} symbols`;\r\n    }\r\n    return undefined;\r\n};","// extracted by mini-css-extract-plugin\nexport default {\"form-control\":\"FormsControls_form-control__Xs-2k\",\"error\":\"FormsControls_error__XpDEH\",\"error-message\":\"FormsControls_error-message__ervNF\",\"text-area\":\"FormsControls_text-area__1PpLI\",\"sum-error-container\":\"FormsControls_sum-error-container__O0jAX\"};"],"names":["cName","classNameFunction","s","_ref","id","userImg","userName","messagePreview","path","concat","_jsxs","NavLink","to","className","nd","children","_jsx","imgContainer","src","alt","dialogText","preview","lastMessage","connect","mapStateToProps","state","props","dialogItemInfo","messages","text","DialogItem","onKeyUp","handleSubmit","e","onSubmit","Field","name","component","TextArea","maxRows","placeholder","validate","requiredField","sendIcon","AddMessageFormContainer","Component","constructor","arguments","key","shiftKey","render","AddMessageForm","this","compose","reduxForm","form","message","messageImgContainer","textContainer","textHeader","textBlock","Message","myName","myImage","messagesEnd","React","messageItems","map","m","realName","your","realImg","MessageContainer","onLoad","scrollToBottom","current","scrollIntoView","block","ref","MessagesPanelContainer","formData","sendMessage","newMessageBody","MessagesPanel","auth","image","login","dialogs","dialogItems","messageContainers","forEach","el","push","DialogItemContainer","Route","element","Routes","withLoginRedirect","Dialogs","cname","withFormControls","input","meta","hasError","labelext","htmlFor","error","InnerTextArea","TextareaAutosize","_ref2","submitFailed","InnerInput","Input","_ref3","touched","_props$router","isLoggedIn","userId","router","params","Navigate","value"],"sourceRoot":""}